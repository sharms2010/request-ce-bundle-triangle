<%!

    public static class SubmissionHelper {

        private HttpServletRequest request;
        private BundleSubmissionService service;
        private Kapp kapp;

        public SubmissionHelper(HttpServletRequest request) {
            this.request = request;
            this.service = (BundleSubmissionService)request.getAttribute("Submissions");
            this.kapp = (Kapp)request.getAttribute("kapp");
        }

        public List<Submission> retrieveRecentSubmissions(String type) {
            return retrieveRecentSubmissions(type, null, null);
        }

        public List<Submission> retrieveRecentSubmissions(String type, int number) {
            return retrieveRecentSubmissions(type, null, number);
        }

        public List<Submission> retrieveRecentSubmissions(String type, String coreState, Integer number) {
            Identity identity = (Identity) request.getAttribute("identity");
            Map<String,String[]> searchOptions = new HashMap<>();
            if(type == "Approval"){
                searchOptions.put("values[Assigned Individual]", new String[] {identity.getUsername()});
            } else {
                searchOptions.put("createdBy", new String[] {identity.getUsername()});
            }
            request.setAttribute("searchOptions", searchOptions);
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.YEAR, -1);
            Date start = cal.getTime();
            cal.add(Calendar.YEAR, +2);
            Date end = cal.getTime();
            java.text.Format formatter = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.000Z'");

            if (coreState != null) {
                searchOptions.put("coreState", new String[] {coreState});
            }
            if (number != null) {
                searchOptions.put("limit", new String[] {String.valueOf(number)});
            }
            searchOptions.put("start", new String[] {formatter.format(start)} );
            searchOptions.put("end", new String[] {formatter.format(end)} );
            searchOptions.put("type", new String[] {formType});

            return service.searchByKapp(kapp, searchOptions);
        }

    }

%>